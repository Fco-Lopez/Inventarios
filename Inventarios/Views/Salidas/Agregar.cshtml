@using Inventarios.Models.ViewModels
@model SalidaViewModel

<h1>Agregar Salida</h1>

<div class="row">
    <div class="col-ma-4">
        <form asp-action="Agregar">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Fecha" class="control-label"></label>
                <input asp-for="Fecha" class="form-control" />
                <span asp-validation-for="Fecha" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Codigo" class="control-label"></label>
                <input id="inputCodigo" asp-for="Codigo" oninput="this.value = this.value.toUpperCase();" class="form-control" onblur="codigoLeave()" />
                <span asp-validation-for="Codigo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdArticulo" class="control-label"></label>
                <select id="IdArticulo" asp-for="IdArticulo" class="form-control" asp-items="ViewBag.Articulos" onchange="actualizarCampos()"></select>
                <span asp-validation-for="IdArticulo" class="text-danger"></span>
                <script>
                    function actualizarCampos() {
                        // Obtener el valor seleccionado por defecto lo pondrá como string(no funcionará la comparación ===)
                        var selectedValue = $('#IdArticulo').val();

                        // Obtener los datos correspondientes a precio y código del ViewBag
                        var datos = @Html.Raw(Json.Serialize(ViewBag.DatosArticulo));
                        //buscamos el articulo con el id
                        var articulo = datos.find(function (item) {
                            return item.idArticulo == selectedValue;
                        });
                        //alert("Articulo:" + articulo);
                        //establecemos los datos si encontremos el articulo
                        if (articulo != undefined) {
                            var codigo = articulo.codigo;
                            var precio = articulo.precio;
                            $('#inputPrecio').val(precio != undefined ? precio : '');
                            $('#inputCodigo').val(codigo != undefined ? codigo : '');
                        }
                        else {
                            $('#inputPrecio').val('');
                            $('#inputCodigo').val('');
                        }
                    }
                    //onblur es el leave de los inputs
                    function codigoLeave() {
                        //vamos a buscar el codigo entre los articulos existentes
                        var codigoBuscar = $('#inputCodigo').val();

                        var datos = @Html.Raw(Json.Serialize(ViewBag.DatosArticulo));

                        var articulo = datos.find(function (item) {
                            return item.codigo == codigoBuscar;
                        });
                        //si lo encontramos hacemos que se muestre en el select y actualizamos los campos
                        //si no lo encuentra al no establecer el item del select carga de nuevo el código que se tenía antes de escribir el código a buscar
                        if (articulo != undefined) {
                            var idArticulo = articulo.idArticulo;
                            if(idArticulo!= undefined)
                                $('#IdArticulo').val(idArticulo);
                        }
                        actualizarCampos();
                    }
                    //función que espera a que cargue el documento para llamar a la función que actualiza
                    //los campos para que el código y el precio no se muestren vacíos al principio
                    document.addEventListener("DOMContentLoaded", function () {
                        actualizarCampos();
                    });
                </script>
            </div>
            <div class="form-group">
                <label asp-for="Cantidad" class="control-label"></label>
                <input asp-for="Cantidad" class="form-control" />
                <span asp-validation-for="Cantidad" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Precio" class="control-label"></label>
                <input id="inputPrecio" asp-for="Precio" class="form-control" />
                <span asp-validation-for="Precio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts
    {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");        
    }    
}
